
server.port=8090
spring.application.name=smartbank-service
# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection


#####AWS RDS######
##spring.datasource.url = jdbc:mysql://smartlizzard.curspeqynm5y.us-east-1.rds.amazonaws.com:3306/smartbank
##spring.datasource.username = smartbank
##spring.datasource.password = P@ssw0rd



###########For Local test#########
spring.datasource.url = jdbc:mysql://localhost:3306/OnlineBanking
spring.datasource.username = scott
spring.datasource.password = tiger
# ===============================



# = JPA / HIBERNATE
# ===============================
spring.jpa.open-in-view=false
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
spring.jpa.properties.hibernate.id.new_generator_mappings=false
# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect



#eureka
eureka.client.service-url.default-zone=http://localhost:8761/eureka/
#indicates the frequency the client sends heartbeat to server to indicate that it is alive.
eureka.instance.lease-renewal-interval-in-seconds=30
#indicates the duration the server waits since it received the last heartbeat before it can evict an instance from its registry
eureka.instance.lease-expiration-duration-in-seconds=90

#load balancing
ribbon.eureka.enabled=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true